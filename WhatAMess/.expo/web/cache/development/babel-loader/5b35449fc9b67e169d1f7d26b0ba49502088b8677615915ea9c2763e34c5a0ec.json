{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useState, createRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { colors } from \"../colors\";\nimport FormItem from \"./FormItem\";\nvar refs = [];\nexport default function PinInput(props) {\n  var _useState = useState(Array(props.numOfInput).fill('')),\n    _useState2 = _slicedToArray(_useState, 2),\n    pin = _useState2[0],\n    setPin = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    activeInput = _useState4[0],\n    setActiveInput = _useState4[1];\n  if (!refs.length) {\n    for (var i = 0; i < pin.length; i++) {\n      refs.push(createRef());\n    }\n  }\n  var changeFocus = function changeFocus(index, text) {\n    var _refs, _refs$current, _refs2, _refs2$current;\n    if (text) (_refs = refs[index + 1]) === null || _refs === void 0 ? void 0 : (_refs$current = _refs.current) === null || _refs$current === void 0 ? void 0 : _refs$current.focus();else (_refs2 = refs[index - 1]) === null || _refs2 === void 0 ? void 0 : (_refs2$current = _refs2.current) === null || _refs2$current === void 0 ? void 0 : _refs2$current.focus();\n  };\n  return React.createElement(View, {\n    style: [styles.wrapper, props.style]\n  }, pin.map(function (_, index) {\n    return React.createElement(FormItem, _extends({}, props, {\n      value: pin[index],\n      style: styles.formItem,\n      onChangeText: function onChangeText(text) {\n        pin[index] = text;\n        setPin(_toConsumableArray(pin));\n        changeFocus(index, text);\n        props.onChangeText(pin.toString().replace(/,/g, ''));\n      },\n      textInputStyle: [styles.input, {\n        borderBottomColor: activeInput === index ? colors.black : colors.lightgrey\n      }, props.textInputStyle],\n      maxLength: 1,\n      key: index,\n      ref: refs[index],\n      onFocus: function onFocus() {\n        return setActiveInput(index);\n      },\n      customValidation: function customValidation() {\n        return {\n          status: true,\n          message: ''\n        };\n      }\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  input: {\n    maxWidth: 40,\n    borderBottomWidth: 1.5,\n    textAlign: 'center',\n    fontSize: 20\n  },\n  formItem: {\n    backgroundColor: 'transparent',\n    paddingLeft: 0,\n    paddingRight: 0,\n    minWidth: 40\n  }\n});","map":{"version":3,"names":["React","useState","createRef","View","StyleSheet","colors","FormItem","refs","PinInput","props","_useState","Array","numOfInput","fill","_useState2","_slicedToArray","pin","setPin","_useState3","_useState4","activeInput","setActiveInput","length","i","push","changeFocus","index","text","_refs","_refs$current","_refs2","_refs2$current","current","focus","createElement","style","styles","wrapper","map","_","_extends","value","formItem","onChangeText","_toConsumableArray","toString","replace","textInputStyle","input","borderBottomColor","black","lightgrey","maxLength","key","ref","onFocus","customValidation","status","message","create","flexDirection","justifyContent","maxWidth","borderBottomWidth","textAlign","fontSize","backgroundColor","paddingLeft","paddingRight","minWidth"],"sources":["/home/vishal/Desktop/SpeMajorFrontend/node_modules/react-native-form-component/lib/module/components/PinInput.tsx"],"sourcesContent":["import React, { useState, createRef, RefObject } from 'react';\nimport {\n  View,\n  StyleSheet,\n  TextInput,\n  TextStyle,\n  ViewStyle,\n  StyleProp,\n  TextInputProps,\n} from 'react-native';\n\nimport { colors } from '../colors';\nimport FormItem from './FormItem';\n\ninterface Props extends TextInputProps {\n  numOfInput: number;\n  onChangeText: (pin: string) => void;\n  textInputStyle?: TextStyle;\n  style?: StyleProp<ViewStyle>;\n}\n\nconst refs: RefObject<TextInput>[] = [];\nexport default function PinInput(props: Props) {\n  const [pin, setPin] = useState(Array(props.numOfInput).fill(''));\n  const [activeInput, setActiveInput] = useState(0);\n  if (!refs.length) {\n    for (let i = 0; i < pin.length; i++) {\n      refs.push(createRef());\n    }\n  }\n\n  const changeFocus = (index: number, text: string) => {\n    if (text) refs[index + 1]?.current?.focus();\n    else refs[index - 1]?.current?.focus();\n  };\n\n  return (\n    <View style={[styles.wrapper, props.style]}>\n      {pin.map((_, index) => (\n        <FormItem\n          {...props}\n          value={pin[index]}\n          style={styles.formItem}\n          onChangeText={(text) => {\n            pin[index] = text;\n            setPin([...pin]);\n            changeFocus(index, text);\n            props.onChangeText(pin.toString().replace(/,/g, ''));\n          }}\n          textInputStyle={[\n            styles.input,\n            {\n              borderBottomColor:\n                activeInput === index ? colors.black : colors.lightgrey,\n            },\n            props.textInputStyle,\n          ]}\n          maxLength={1}\n          key={index}\n          ref={refs[index]}\n          onFocus={() => setActiveInput(index)}\n          customValidation={() => ({ status: true, message: '' })}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  input: {\n    maxWidth: 40,\n    borderBottomWidth: 1.5,\n    textAlign: 'center',\n    fontSize: 20,\n  },\n  formItem: {\n    backgroundColor: 'transparent',\n    paddingLeft: 0,\n    paddingRight: 0,\n    minWidth: 40,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}