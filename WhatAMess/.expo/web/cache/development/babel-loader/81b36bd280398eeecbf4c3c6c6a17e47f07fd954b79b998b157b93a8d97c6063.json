{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Children, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { containsError } from \"../FormItem\";\nimport { colors } from \"../../colors\";\nexport var submitForm;\nexport default function Form(props) {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    width = _useState2[0],\n    setWidth = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    opacity = _useState4[0],\n    setOpacity = _useState4[1];\n  var handleButtonPress = function handleButtonPress() {\n    var _props$onButtonPress;\n    var fieldsWithError = [];\n    Children.forEach(props.children, function (child, index) {\n      var _child$ref, _child$ref$current;\n      if (child && ((_child$ref = child.ref) === null || _child$ref === void 0 ? void 0 : (_child$ref$current = _child$ref.current) === null || _child$ref$current === void 0 ? void 0 : _child$ref$current.getComponent()) == 'FormItem') {\n        var _child$props = child.props,\n          keyboardType = _child$props.keyboardType,\n          isRequired = _child$props.isRequired,\n          value = _child$props.value,\n          customValidation = _child$props.customValidation;\n        var validation;\n        if (customValidation) validation = customValidation();\n        if (containsError(keyboardType, isRequired, value, validation).status) {\n          var _child$ref2;\n          fieldsWithError.push(child.props.label || child.props.placeholder || 'FormItem' + index);\n          (_child$ref2 = child.ref) === null || _child$ref2 === void 0 ? void 0 : _child$ref2.current.setState();\n        }\n      }\n    });\n    if (fieldsWithError.length) {\n      console.error('The following fields do not fulfil their conditions:\\n' + JSON.stringify(fieldsWithError, null, 2));\n      return;\n    }\n    (_props$onButtonPress = props.onButtonPress) === null || _props$onButtonPress === void 0 ? void 0 : _props$onButtonPress.call(props);\n  };\n  submitForm = function submitForm() {\n    return handleButtonPress();\n  };\n  return React.createElement(KeyboardAvoidingView, {\n    keyboardVerticalOffset: Platform.OS == 'ios' ? props.keyboardVerticalOffset || 50 : undefined,\n    behavior: Platform.OS == 'ios' ? 'padding' : undefined,\n    style: props.style\n  }, props.children, !props.hideSubmitButton && React.createElement(Pressable, {\n    style: [styles.button, Platform.OS == 'ios' ? {\n      opacity: opacity\n    } : undefined, props.buttonStyle],\n    onPress: handleButtonPress,\n    android_ripple: {\n      color: 'lightgrey',\n      radius: width\n    },\n    onLayout: function onLayout(event) {\n      return setWidth(event.nativeEvent.layout.width);\n    },\n    onPressIn: function onPressIn() {\n      return setOpacity(0.5);\n    },\n    onPressOut: function onPressOut() {\n      return setOpacity(1);\n    }\n  }, React.createElement(Text, {\n    style: [styles.buttonText, props.buttonTextStyle]\n  }, props.buttonText || 'Submit')));\n}\nForm.defaultProps = {\n  style: {}\n};\nvar styles = StyleSheet.create({\n  button: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n    borderRadius: 8,\n    marginVertical: 32\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","Children","useState","KeyboardAvoidingView","Platform","Pressable","Text","StyleSheet","containsError","colors","submitForm","Form","props","_useState","_useState2","_slicedToArray","width","setWidth","_useState3","_useState4","opacity","setOpacity","handleButtonPress","_props$onButtonPress","fieldsWithError","forEach","children","child","index","_child$ref","_child$ref$current","ref","current","getComponent","_child$props","keyboardType","isRequired","value","customValidation","validation","status","_child$ref2","push","label","placeholder","setState","length","console","error","JSON","stringify","onButtonPress","call","createElement","keyboardVerticalOffset","OS","undefined","behavior","style","hideSubmitButton","styles","button","buttonStyle","onPress","android_ripple","color","radius","onLayout","event","nativeEvent","layout","onPressIn","onPressOut","buttonText","buttonTextStyle","defaultProps","create","height","justifyContent","alignItems","backgroundColor","red","borderRadius","marginVertical","fontSize","fontWeight"],"sources":["/home/vishal/Desktop/SpeMajorFrontend/node_modules/react-native-form-component/lib/module/components/Form/index.tsx"],"sourcesContent":["import React, { Children, useState, ReactNode } from 'react';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  Pressable,\n  Text,\n  StyleSheet,\n  TextInputSubmitEditingEventData,\n  NativeSyntheticEvent,\n  ViewStyle,\n} from 'react-native';\n\nimport { containsError } from '../FormItem';\nimport { colors } from '../../colors';\n\ninterface Props {\n  children: ReactNode;\n  keyboardVerticalOffset?: number;\n  buttonText?: string;\n  buttonStyle?: object | object[];\n  buttonTextStyle?: object | object[];\n  onButtonPress?: () => void;\n  style?: ViewStyle;\n  hideSubmitButton?: boolean;\n}\n\nexport let submitForm: (\n  e?: NativeSyntheticEvent<TextInputSubmitEditingEventData>\n) => void;\n\nexport default function Form(props: Props) {\n  const [width, setWidth] = useState(0);\n  const [opacity, setOpacity] = useState(1);\n\n  const handleButtonPress = () => {\n    const fieldsWithError: string[] = [];\n    Children.forEach(props.children, (child, index) => {\n      //@ts-ignore\n      if (child && child.ref?.current?.getComponent() == 'FormItem') {\n        const { keyboardType, isRequired, value, customValidation } =\n          //@ts-ignore\n          child.props;\n        let validation;\n\n        if (customValidation) validation = customValidation();\n        if (containsError(keyboardType, isRequired, value, validation).status) {\n          fieldsWithError.push(\n            //@ts-ignore\n            child.props.label || child.props.placeholder || 'FormItem' + index\n          );\n          //@ts-ignore\n          child.ref?.current.setState();\n        }\n      }\n    });\n\n    if (fieldsWithError.length) {\n      console.error(\n        'The following fields do not fulfil their conditions:\\n' +\n          JSON.stringify(fieldsWithError, null, 2)\n      );\n      return;\n    }\n\n    props.onButtonPress?.();\n  };\n\n  submitForm = () => handleButtonPress();\n\n  return (\n    <KeyboardAvoidingView\n      keyboardVerticalOffset={\n        Platform.OS == 'ios' ? props.keyboardVerticalOffset || 50 : undefined\n      }\n      behavior={Platform.OS == 'ios' ? 'padding' : undefined}\n      style={props.style}\n    >\n      {props.children}\n      {!props.hideSubmitButton && (\n        <Pressable\n          style={[\n            styles.button,\n            Platform.OS == 'ios' ? { opacity } : undefined,\n            props.buttonStyle,\n          ]}\n          onPress={handleButtonPress}\n          android_ripple={{ color: 'lightgrey', radius: width }}\n          onLayout={(event) => setWidth(event.nativeEvent.layout.width)}\n          onPressIn={() => setOpacity(0.5)}\n          onPressOut={() => setOpacity(1)}\n        >\n          <Text style={[styles.buttonText, props.buttonTextStyle]}>\n            {props.buttonText || 'Submit'}\n          </Text>\n        </Pressable>\n      )}\n    </KeyboardAvoidingView>\n  );\n}\n\nForm.defaultProps = {\n  style: {},\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n    borderRadius: 8,\n    marginVertical: 32,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}