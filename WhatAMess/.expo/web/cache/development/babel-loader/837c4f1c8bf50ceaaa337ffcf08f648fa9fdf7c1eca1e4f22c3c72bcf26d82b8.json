{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport React, { useState, useRef, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Form, FormItem } from \"react-native-form-component\";\nimport { baseUrl } from \"../assets/URL\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { GlobalContext } from \"../context/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(GlobalContext),\n    globalState = _useContext.globalState,\n    setGlobalState = _useContext.setGlobalState;\n  var _useState = useState({\n      username: \"\",\n      password: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    credentials = _useState2[0],\n    setcredentials = _useState2[1];\n  var credentialInput = useRef();\n  return _jsxs(_StyledComponent, {\n    className: \"flex-1 justify-center p-5\",\n    component: View,\n    children: [_jsxs(Form, {\n      buttonText: \"Login\",\n      onButtonPress: _asyncToGenerator(function* () {\n        yield axios.post(baseUrl + \"/authenticate\", _objectSpread({}, credentials)).then(function (res) {\n          console.log(res.data);\n          if (Platform.OS !== \"web\") {\n            _asyncToGenerator(function* () {\n              try {\n                yield AsyncStorage.setItem(\"logged-in-user\", JSON.stringify(res.data));\n              } catch (e) {\n                console.log(\"Error in async storage:\", e);\n              }\n            })();\n          }\n          Alert.alert(\"Welcome\", res.data.role + \" :- \" + res.data.username, [{\n            text: \"Thanks\",\n            onPress: function onPress() {\n              if (res.data.role === \"CUSTOMER\") setGlobalState(_objectSpread(_objectSpread({}, res.data), {}, {\n                  isLoggedIn: true\n                }));else setGlobalState(_objectSpread(_objectSpread({}, res.data), {}, {\n                isLoggedIn: true\n              }));\n            }\n          }]);\n        }).catch(function (err) {\n          console.log(err);\n          Alert.alert(\"Oops!\", \"Check you credentials.\", [{\n            text: \"OK\"\n          }]);\n        });\n      }),\n      children: [_jsx(FormItem, {\n        label: \"User Name\",\n        isRequired: true,\n        value: credentials.username,\n        onChangeText: function onChangeText(i) {\n          return setcredentials(_objectSpread(_objectSpread({}, credentials), {}, {\n            username: i\n          }));\n        },\n        asterik: true,\n        ref: credentialInput\n      }), _jsx(FormItem, {\n        label: \"Password\",\n        isRequired: true,\n        value: credentials.password,\n        onChangeText: function onChangeText(i) {\n          return setcredentials(_objectSpread(_objectSpread({}, credentials), {}, {\n            password: i\n          }));\n        },\n        asterik: true,\n        ref: credentialInput\n      })]\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Registration\");\n      },\n      style: {\n        alignItems: \"center\"\n      },\n      children: _jsx(Text, {\n        children: \"Register?\"\n      })\n    })]\n  });\n}\nexport default LoginScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"p-5\": {\n      \"paddingTop\": 20,\n      \"paddingRight\": 20,\n      \"paddingBottom\": 20,\n      \"paddingLeft\": 20\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useContext","axios","Form","FormItem","baseUrl","AsyncStorage","GlobalContext","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useContext","globalState","setGlobalState","_useState","username","password","_useState2","_slicedToArray","credentials","setcredentials","credentialInput","_StyledComponent","className","component","View","children","buttonText","onButtonPress","_asyncToGenerator","post","_objectSpread","then","res","console","log","data","Platform","OS","setItem","JSON","stringify","e","Alert","alert","role","text","onPress","isLoggedIn","catch","err","label","isRequired","value","onChangeText","i","asterik","ref","Pressable","navigate","style","alignItems","Text","_NativeWindStyleSheet","create","styles"],"sources":["/home/vishal/Desktop/SpeMajorFrontend/screens/LoginScreen.js"],"sourcesContent":["import { View, Text, Pressable, Alert, Platform } from \"react-native\";\nimport React, { useState, useRef, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Form, FormItem } from \"react-native-form-component\";\nimport { baseUrl } from \"../assets/URL\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport { GlobalContext } from \"../context/userContext\";\n\nfunction LoginScreen({ navigation }) {\n  const { globalState, setGlobalState } = useContext(GlobalContext);\n\n  //store credentials\n  const [credentials, setcredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const credentialInput = useRef();\n\n  return (\n    <View className=\"flex-1 justify-center p-5\">\n      <Form\n        buttonText=\"Login\"\n        //api call here\n        onButtonPress={async () => {\n          await axios\n            .post(`${baseUrl}/authenticate`, {\n              ...credentials,\n            })\n            .then((res) => {\n              console.log(res.data);\n\n              //persisting the user in async storage only on app\n              if (Platform.OS !== \"web\") {\n                (async () => {\n                  try {\n                    await AsyncStorage.setItem(\n                      \"logged-in-user\",\n                      JSON.stringify(res.data)\n                    );\n                  } catch (e) {\n                    console.log(\"Error in async storage:\", e);\n                  }\n                })(); //called the function here itself using '()'\n              }\n\n              Alert.alert(\n                \"Welcome\",\n                `${res.data.role} :- ${res.data.username}`,\n                [\n                  // {\n                  //   text: 'Cancel',\n                  //   style: 'cancel',\n                  // },\n                  {\n                    text: \"Thanks\",\n                    onPress: () => {\n                      if (res.data.role === \"CUSTOMER\")\n                        // nav.navigate('CustomerScreen');\n                        setGlobalState({ ...res.data, isLoggedIn: true });\n                      // nav.navigate('MessOwnerScreen');\n                      else setGlobalState({ ...res.data, isLoggedIn: true });\n                    },\n                  },\n                ]\n              );\n            })\n            .catch((err) => {\n              console.log(err);\n              Alert.alert(\"Oops!\", `Check you credentials.`, [{ text: \"OK\" }]);\n            });\n        }}\n      >\n        <FormItem\n          label=\"User Name\"\n          isRequired\n          value={credentials.username}\n          onChangeText={(i) => setcredentials({ ...credentials, username: i })}\n          asterik\n          ref={credentialInput}\n        />\n        <FormItem\n          label=\"Password\"\n          isRequired\n          value={credentials.password}\n          onChangeText={(i) => setcredentials({ ...credentials, password: i })}\n          asterik\n          ref={credentialInput}\n        />\n      </Form>\n      <Pressable\n        onPress={() => navigation.navigate(\"Registration\")}\n        style={{ alignItems: \"center\" }}\n      >\n        <Text>Register?</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}