{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useContext, useState } from 'react';\nimport Card from \"./Form/Card\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { GlobalContext } from \"../../context/userContext\";\nimport axios from 'axios';\nimport { baseUrl } from \"../../assets/URL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UpdateMenu() {\n  var _useState = useState([{\n      day: '',\n      breakfast: '',\n      lunch: '',\n      dinner: ''\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useContext = useContext(GlobalContext),\n    globalState = _useContext.globalState,\n    setGlobalState = _useContext.setGlobalState;\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    visible = _useState4[0],\n    setVisible = _useState4[1];\n  var renderDropdown = function renderDropdown() {\n    if (visible) {\n      return _jsx(Text, {\n        style: styles.dropdown,\n        children: \"This is where the dropdown will be rendered.\"\n      });\n    }\n  };\n  var changeDay = function changeDay(ind, txt) {\n    var temp = data;\n    temp.map(function (item, index) {\n      if (index == ind) {\n        item.day = txt;\n      }\n    });\n    console.log(temp);\n    setData(temp);\n  };\n  var changeBreakfast = function changeBreakfast(ind, txt) {\n    var temp = data;\n    temp.map(function (item, index) {\n      if (index == ind) {\n        item.breakfast = txt;\n      }\n    });\n    console.log(temp);\n    setData(temp);\n  };\n  var changeLunch = function changeLunch(ind, txt) {\n    var temp = data;\n    temp.map(function (item, index) {\n      if (index == ind) {\n        item.lunch = txt;\n      }\n    });\n    console.log(temp);\n    setData(temp);\n  };\n  var changeDinner = function changeDinner(ind, txt) {\n    var temp = data;\n    temp.map(function (item, index) {\n      if (index == ind) {\n        item.dinner = txt;\n      }\n    });\n    console.log(temp);\n    setData(temp);\n  };\n  var MenuUpdate = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield axios.post(baseUrl + \"/mess/add-menu/\" + (globalState == null ? void 0 : globalState.username), data, {\n        headers: {\n          Authorization: \"Bearer \" + (globalState == null ? void 0 : globalState.token)\n        }\n      }).then(function (res) {}).catch(function (err) {\n        return console.log(err);\n      });\n    });\n    return function MenuUpdate() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(View, {\n      children: _jsx(FlatList, {\n        data: data,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n            index = _ref2.index;\n          return _jsx(Card, {\n            index: index,\n            onChangeDay: renderDropdown(),\n            onChangeBreakfast: function onChangeBreakfast(txt) {\n              changeBreakfast(index, txt);\n            },\n            onChangeLunch: function onChangeLunch(txt) {\n              changeLunch(index, txt);\n            },\n            onChangeDinner: function onChangeDinner(txt) {\n              changeDinner(index, txt);\n            },\n            onClickRemove: function onClickRemove() {\n              if (data.length > 1) {\n                var temp = data;\n                temp.splice(index, 1);\n                var xyz = [];\n                temp.map(function (item) {\n                  xyz.push(item);\n                });\n                setData(xyz);\n              }\n            }\n          });\n        }\n      })\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        var tempData = data;\n        tempData.push({\n          day: '',\n          breakfast: '',\n          lunch: '',\n          dinner: ''\n        });\n        var temp = [];\n        tempData.map(function (item) {\n          temp.push(item);\n        });\n        setData(temp);\n      },\n      children: [_jsx(Icon, {\n        name: \"add-circle-outline\",\n        size: 50,\n        style: {\n          alignSelf: 'flex-end'\n        }\n      }), _jsx(TouchableOpacity, {\n        style: {\n          width: 100,\n          height: 50,\n          backgroundColor: 'purple',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flex: 1,\n          flexDirection: 'row',\n          position: 'absolute',\n          alignSelf: 'center',\n          borderRadius: 10,\n          marginTop: 5\n        },\n        onPress: function onPress() {\n          MenuUpdate();\n        },\n        children: _jsx(Text, {\n          style: {\n            color: '#fff'\n          },\n          children: \"Submit\"\n        })\n      })]\n    })]\n  });\n}\nexport default UpdateMenu;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"absolute\": {\n      \"position\": \"absolute\"\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  }\n});","map":{"version":3,"names":["React","useContext","useState","Card","Icon","GlobalContext","axios","baseUrl","jsx","_jsx","jsxs","_jsxs","UpdateMenu","_useState","day","breakfast","lunch","dinner","_useState2","_slicedToArray","data","setData","_useContext","globalState","setGlobalState","_useState3","_useState4","visible","setVisible","renderDropdown","Text","style","styles","dropdown","children","changeDay","ind","txt","temp","map","item","index","console","log","changeBreakfast","changeLunch","changeDinner","MenuUpdate","_ref","_asyncToGenerator","post","username","headers","Authorization","token","then","res","catch","err","apply","arguments","ScrollView","flex","View","FlatList","renderItem","_ref2","onChangeDay","onChangeBreakfast","onChangeLunch","onChangeDinner","onClickRemove","length","splice","xyz","push","TouchableOpacity","onPress","tempData","name","size","alignSelf","width","height","backgroundColor","justifyContent","alignItems","flexDirection","position","borderRadius","marginTop","color","_NativeWindStyleSheet","create"],"sources":["/home/vishal/Desktop/SpeMajorFrontend/screens/mess/UpdateMenu.js"],"sourcesContent":["import { View, Text, TextInput, FlatList, TouchableOpacity, ScrollView } from 'react-native';\nimport React, { useContext, useState } from 'react';\nimport Card from './Form/Card';\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport { GlobalContext } from \"../../context/userContext\";\nimport axios from 'axios';\nimport { baseUrl } from '../../assets/URL';\n\nfunction UpdateMenu() {\n  const [data, setData] = useState([{ day: '', breakfast: '', lunch: '', dinner: '' }]);\n  const { globalState, setGlobalState } = useContext(GlobalContext);\n  const [visible, setVisible] = useState(false);\n  \n  const renderDropdown = () => {\n    if (visible) {\n      return (\n          <Text style={styles.dropdown}>\n            This is where the dropdown will be rendered.\n          </Text>\n      );\n    }\n  };\n  const changeDay = (ind, txt) => {\n    let temp = data;\n    temp.map((item, index) => {\n      if (index == ind) {\n        item.day = txt;\n      }\n    });\n    console.log(temp);\n    setData(temp);\n  };\n\n  const changeBreakfast = (ind, txt) => {\n    let temp = data;\n    temp.map((item, index) => {\n      if (index == ind) {\n        item.breakfast = txt;\n      }\n    });\n    console.log(temp);\n    setData(temp);\n  };\n\n  const changeLunch = (ind, txt) => {\n    let temp = data;\n    temp.map((item, index) => {\n      if (index == ind) {\n        item.lunch = txt;\n      }\n    });\n    console.log(temp);\n    setData(temp);\n  };\n\n\n  const changeDinner = (ind, txt) => {\n    let temp = data;\n    temp.map((item, index) => {\n      if (index == ind) {\n        item.dinner = txt;\n      }\n    });\n    console.log(temp);\n    setData(temp);\n  };\n\n  const MenuUpdate = async () =>{\n    await axios\n      .post(`${baseUrl}/mess/add-menu/${globalState?.username}`,data,{\n        //make sure that the token starts with Bearer\n        headers: {\n          Authorization: `Bearer ${globalState?.token}`,\n        },\n      })\n      .then((res) => {\n        // console.log(res.data);\n        \n      })\n      .catch((err) => console.log(err));\n  }\n  // onChangeDay={txt => {\n  //   changeDay(index, txt);\n  // }}\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View>\n        <FlatList\n          data={data}\n          renderItem={({ item, index }) => {\n            return (\n              <Card\n                index={index}\n                onChangeDay={renderDropdown()}\n                onChangeBreakfast={txt => {\n                  changeBreakfast(index, txt);\n                }}\n                onChangeLunch={txt => {\n                  changeLunch(index, txt);\n                }}\n                onChangeDinner={txt => {\n                  changeDinner(index, txt);\n                }}\n                onClickRemove={() => {\n                  if (data.length > 1) {\n                    let temp = data;\n                    temp.splice(index, 1);\n                    let xyz = [];\n                    temp.map(item => {\n                      xyz.push(item);\n                    });\n                    setData(xyz);\n                  }\n                }}\n              />\n            );\n          }}\n        />\n      </View>\n      <TouchableOpacity\n        onPress={() => {\n          let tempData = data;\n          tempData.push({ day: '', breakfast: '', lunch: '', dinner: '' });\n          let temp = [];\n          tempData.map(item => {\n            temp.push(item);\n          });\n          setData(temp);\n        }}>\n\n        <Icon name=\"add-circle-outline\" size={50} style={{ alignSelf: 'flex-end' }} />\n\n          <TouchableOpacity\n        style={{\n          width:100,\n          height: 50,\n          backgroundColor: 'purple',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flex:1,\n          flexDirection:'row',\n          position: 'absolute',\n          alignSelf:'center',\n          borderRadius: 10,\n          marginTop:5\n        }}\n        onPress={() => {\n          MenuUpdate();\n        }}>\n        \n        <Text style={{color: '#fff'}}>Submit</Text>\n      </TouchableOpacity>\n      </TouchableOpacity>\n      \n    </ScrollView>\n\n  )\n}\n\nexport default UpdateMenu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}