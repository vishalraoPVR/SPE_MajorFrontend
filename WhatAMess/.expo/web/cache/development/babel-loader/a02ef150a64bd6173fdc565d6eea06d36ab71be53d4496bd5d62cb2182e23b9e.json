{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LoginRegistrationStackScreen from \"./screens/LoginRegistrationScreen\";\nimport { useEffect, useState } from \"react\";\nimport CustomerTabScreen from \"./screens/customer/CustomerTabScreen\";\nimport MessOwnerTabScreen from \"./screens/mess/MessOwnerTabScreen\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { GlobalContext } from \"./context/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    loggedinUser = _useState2[0],\n    setLoggedinUser = _useState2[1];\n  var _useState3 = useState({\n      username: \"\",\n      role: \"\",\n      token: \"\",\n      isLoggedIn: true\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    globalState = _useState4[0],\n    setGlobalState = _useState4[1];\n  useEffect(function () {\n    if (Platform.OS !== \"web\") {\n      _asyncToGenerator(function* () {\n        try {\n          var val = JSON.parse(yield AsyncStorage.getItem(\"logged-in-user\"));\n          setLoggedinUser(val);\n          setGlobalState(_objectSpread(_objectSpread({}, loggedinUser), {}, {\n            isLoggedIn: true\n          }));\n        } catch (e) {\n          console.log(\"Error in async storage:\", e);\n        }\n      })();\n    }\n  }, [globalState]);\n  return _jsx(GlobalContext.Provider, {\n    value: {\n      globalState: globalState,\n      setGlobalState: setGlobalState\n    },\n    children: _jsxs(NavigationContainer, {\n      children: [_jsx(Stack.Navigator, {\n        screenOptions: {\n          headerTitleAlign: \"center\",\n          headerTintColor: \"purple\",\n          headerTitle: \"What a Mess\"\n        },\n        children: loggedinUser === null ? _jsx(Stack.Screen, {\n          name: \"Setup\",\n          component: LoginRegistrationStackScreen\n        }) : (loggedinUser == null ? void 0 : loggedinUser.role) === \"CUSTOMER\" ? _jsx(Stack.Screen, {\n          name: \"CustomerScreen\",\n          component: CustomerTabScreen\n        }) : _jsx(Stack.Screen, {\n          name: \"MessOwnerScreen\",\n          component: MessOwnerTabScreen\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","StatusBar","NavigationContainer","createNativeStackNavigator","LoginRegistrationStackScreen","useEffect","useState","CustomerTabScreen","MessOwnerTabScreen","AsyncStorage","GlobalContext","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","loggedinUser","setLoggedinUser","_useState3","username","role","token","isLoggedIn","_useState4","globalState","setGlobalState","Platform","OS","_asyncToGenerator","val","JSON","parse","getItem","_objectSpread","e","console","log","Provider","value","children","Navigator","screenOptions","headerTitleAlign","headerTintColor","headerTitle","Screen","name","component","style"],"sources":["/home/vishal/Desktop/SpeMajorFrontend/App.js"],"sourcesContent":["import React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LoginRegistrationStackScreen from \"./screens/LoginRegistrationScreen\";\nimport { useEffect, useState } from \"react\";\nimport CustomerTabScreen from \"./screens/customer/CustomerTabScreen\";\nimport MessOwnerTabScreen from \"./screens/mess/MessOwnerTabScreen\";\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { GlobalContext } from \"./context/userContext\";\n\nconst Stack = createNativeStackNavigator();\nexport default function App() {\n  const [loggedinUser, setLoggedinUser] = useState(null);\n  const [globalState, setGlobalState] = useState({\n    username: \"\",\n    role: \"\",\n    token: \"\",\n    isLoggedIn: true,\n  }); //maining a global state as this is passed to child component\n  //and when anything changes, useEffect is called as it is dependednt on globalState variable\n\n  useEffect(() => {\n    if (Platform.OS !== \"web\") {\n      (async () => {\n        try {\n          const val = JSON.parse(await AsyncStorage.getItem(\"logged-in-user\"));\n          setLoggedinUser(val);\n          setGlobalState({ ...loggedinUser, isLoggedIn: true });\n          // console.log(val);\n        } catch (e) {\n          console.log(\"Error in async storage:\", e);\n        }\n      })();\n    }\n  }, [globalState]);\n\n  return (\n    <GlobalContext.Provider value={{ globalState, setGlobalState }}>\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={{\n            headerTitleAlign: \"center\",\n            headerTintColor: \"purple\",\n            headerTitle: \"What a Mess\",\n          }}\n        >\n          {\n            loggedinUser === null ? (\n              <Stack.Screen\n                name=\"Setup\"\n                component={LoginRegistrationStackScreen}\n              /> //return login screen if user is null {}\n            ) : loggedinUser?.role === \"CUSTOMER\" ? (\n              <Stack.Screen\n                name=\"CustomerScreen\"\n                component={CustomerTabScreen}\n              /> //return customer screens\n            ) : (\n              <Stack.Screen\n                name=\"MessOwnerScreen\"\n                component={MessOwnerTabScreen}\n              />\n            ) //return owner screens\n          }\n        </Stack.Navigator>\n        <StatusBar style=\"auto\" />\n      </NavigationContainer>\n    </GlobalContext.Provider>\n  );\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,4BAA4B;AACnC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,iBAAiB;AACxB,OAAOC,kBAAkB;AAEzB,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,aAAa;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,IAAMC,KAAK,GAAGZ,0BAA0B,EAAE;AAC1C,eAAe,SAASa,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAwCX,QAAQ,CAAC,IAAI,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAsChB,QAAQ,CAAC;MAC7CiB,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE;IACd,CAAC,CAAC;IAAAC,UAAA,GAAAR,cAAA,CAAAG,UAAA;IALKM,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAQlCtB,SAAS,CAAC,YAAM;IACd,IAAIyB,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;MACzBC,iBAAA,CAAC,aAAY;QACX,IAAI;UACF,IAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,OAAO1B,YAAY,CAAC2B,OAAO,CAAC,gBAAgB,CAAC,CAAC;UACpEf,eAAe,CAACY,GAAG,CAAC;UACpBJ,cAAc,CAAAQ,aAAA,CAAAA,aAAA,KAAMjB,YAAY;YAAEM,UAAU,EAAE;UAAI,GAAG;QAEvD,CAAC,CAAC,OAAOY,CAAC,EAAE;UACVC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,CAAC,CAAC;QAC3C;MACF,CAAC,GAAG;IACN;EACF,CAAC,EAAE,CAACV,WAAW,CAAC,CAAC;EAEjB,OACEhB,IAAA,CAACF,aAAa,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAEd,WAAW,EAAXA,WAAW;MAAEC,cAAc,EAAdA;IAAe,CAAE;IAAAc,QAAA,EAC7D7B,KAAA,CAACZ,mBAAmB;MAAAyC,QAAA,GAClB/B,IAAA,CAACG,KAAK,CAAC6B,SAAS;QACdC,aAAa,EAAE;UACbC,gBAAgB,EAAE,QAAQ;UAC1BC,eAAe,EAAE,QAAQ;UACzBC,WAAW,EAAE;QACf,CAAE;QAAAL,QAAA,EAGAvB,YAAY,KAAK,IAAI,GACnBR,IAAA,CAACG,KAAK,CAACkC,MAAM;UACXC,IAAI,EAAC,OAAO;UACZC,SAAS,EAAE/C;QAA6B,EACxC,GACA,CAAAgB,YAAY,oBAAZA,YAAY,CAAEI,IAAI,MAAK,UAAU,GACnCZ,IAAA,CAACG,KAAK,CAACkC,MAAM;UACXC,IAAI,EAAC,gBAAgB;UACrBC,SAAS,EAAE5C;QAAkB,EAC7B,GAEFK,IAAA,CAACG,KAAK,CAACkC,MAAM;UACXC,IAAI,EAAC,iBAAiB;UACtBC,SAAS,EAAE3C;QAAmB;MAEjC,EAEa,EAClBI,IAAA,CAACX,SAAS;QAACmD,KAAK,EAAC;MAAM,EAAG;IAAA;EACN,EACC;AAE7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}