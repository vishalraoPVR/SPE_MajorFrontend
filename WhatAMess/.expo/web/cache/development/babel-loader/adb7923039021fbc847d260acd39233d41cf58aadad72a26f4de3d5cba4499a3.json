{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Form, FormItem, Picker } from \"react-native-form-component\";\nimport { baseUrl } from \"../assets/URL\";\nimport axios from \"axios\";\nimport * as Location from \"expo-location\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction RegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      username: \"\",\n      password: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    credentials = _useState2[0],\n    setcredentials = _useState2[1];\n  var credentialInput = useRef();\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nextScreen = _useState4[0],\n    setNextScreen = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    location = _useState6[0],\n    setLocation = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    errorMsg = _useState8[0],\n    setErrorMsg = _useState8[1];\n  var _useState9 = useState({\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      phone: \"\"\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    customerDetails = _useState10[0],\n    setCustomerDetails = _useState10[1];\n  var customerInput = useRef();\n  var addressResponse;\n  var _useState11 = useState({\n      firstname: \"\",\n      lastname: \"\",\n      phone: \"\",\n      messname: \"\",\n      address: addressResponse,\n      latitude: \"\",\n      longitude: \"\",\n      service: \"Both\",\n      type: \"pure-veg\",\n      trial: true,\n      breakfast: true,\n      aboutSundays: \"closed\",\n      pricing: \"\"\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    messDetails = _useState12[0],\n    setMessDetails = _useState12[1];\n  var messInput = useRef();\n  var _useState13 = useState(1),\n    _useState14 = _slicedToArray(_useState13, 2),\n    number = _useState14[0],\n    setNumber = _useState14[1];\n  var getMyAddress = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _res$, _res$2, _res$3, _res$4, _res$5, _res$6, _res$7;\n      var res = yield Location.reverseGeocodeAsync({\n        longitude: location.coords.longitude,\n        latitude: location.coords.latitude\n      });\n      var addressResponse = ((_res$ = res[0]) == null ? void 0 : _res$.name) + \" \" + ((_res$2 = res[0]) == null ? void 0 : _res$2.streetNumber) + \" \" + ((_res$3 = res[0]) == null ? void 0 : _res$3.street) + \" \" + ((_res$4 = res[0]) == null ? void 0 : _res$4.district) + \", \" + ((_res$5 = res[0]) == null ? void 0 : _res$5.city) + \", \" + ((_res$6 = res[0]) == null ? void 0 : _res$6.region) + \" - \" + ((_res$7 = res[0]) == null ? void 0 : _res$7.postalCode);\n      console.log(\"Address\", addressResponse);\n      setMessDetails({\n        address: addressResponse\n      });\n    });\n    return function getMyAddress() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n      yield Location.getCurrentPositionAsync({}).then(function (loc) {\n        setLocation(loc);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    })();\n  }, []);\n  var url, data;\n  number === 1 ? (url = baseUrl + \"/register-new-customer\", data = _objectSpread(_objectSpread({}, credentials), customerDetails)) : (url = baseUrl + \"/register-new-mess\", data = _objectSpread(_objectSpread({}, credentials), messDetails));\n  return _jsxs(_StyledComponent, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    className: \"p-5\",\n    component: View,\n    children: [nextScreen === 1 && _jsxs(Form, {\n      buttonText: \"Next\",\n      onButtonPress: _asyncToGenerator(function* () {\n        getMyAddress();\n        setNextScreen(2);\n      }),\n      children: [_jsx(FormItem, {\n        label: \"User Name\",\n        isRequired: true,\n        value: credentials.username,\n        onChangeText: function onChangeText(i) {\n          return setcredentials(_objectSpread(_objectSpread({}, credentials), {}, {\n            username: i\n          }));\n        },\n        asterik: true,\n        ref: credentialInput,\n        underneathText: \"Username should be unique\"\n      }), _jsx(FormItem, {\n        label: \"Password\",\n        isRequired: true,\n        value: credentials.password,\n        onChangeText: function onChangeText(i) {\n          return setcredentials(_objectSpread(_objectSpread({}, credentials), {}, {\n            password: i\n          }));\n        },\n        asterik: true,\n        ref: credentialInput\n      })]\n    }), nextScreen === 2 && _jsx(Form, {\n      onButtonPress: _asyncToGenerator(function* () {\n        var url, data;\n        if (number === 1) {\n          url = baseUrl + \"/register-new-customer\";\n          data = _objectSpread(_objectSpread({}, credentials), customerDetails);\n        } else {\n          url = baseUrl + \"/register-new-mess\";\n          data = _objectSpread(_objectSpread(_objectSpread({}, credentials), messDetails), {}, {\n            latitude: location.coords.latitude,\n            longitude: location.coords.longitude\n          });\n        }\n        yield axios.post(url, data).then(function (res) {\n          console.log(res.data);\n          if (res.data === \"Username already taken!\") Alert.alert(\"Oh no!\", \"\" + res.data, [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return setNumber(1);\n            }\n          }]);else Alert.alert(\"Success\", \"\" + res.data, [{\n            text: \"Continue to Login\",\n            onPress: function onPress() {\n              navigation.navigate(\"Login\");\n            }\n          }]);\n        }).catch(function (err) {\n          console.log(err);\n          Alert.alert(\"Oops!\", \"\" + err, [{\n            text: \"OK\"\n          }]);\n        });\n      }),\n      children: _jsxs(ScrollView, {\n        contentContainerStyle: {\n          padding: 5\n        },\n        children: [_jsx(Picker, {\n          items: [{\n            label: \"I want to find mess\",\n            value: 1\n          }, {\n            label: \"I want to register my mess\",\n            value: 2\n          }],\n          label: \"What are you looking for?\",\n          selectedValue: number,\n          onSelection: function onSelection(item) {\n            return setNumber(item.value);\n          }\n        }), number === 2 ? _jsxs(_Fragment, {\n          children: [_jsx(FormItem, {\n            label: \"firstname\",\n            isRequired: true,\n            value: messDetails.firstname,\n            onChangeText: function onChangeText(i) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                firstname: i\n              }));\n            },\n            asterik: true,\n            ref: messInput\n          }), _jsx(FormItem, {\n            label: \"lastname\",\n            isRequired: true,\n            value: messDetails.lastname,\n            onChangeText: function onChangeText(i) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                lastname: i\n              }));\n            },\n            asterik: true,\n            ref: messInput\n          }), _jsx(FormItem, {\n            label: \"Contact\",\n            isRequired: true,\n            value: messDetails.phone,\n            onChangeText: function onChangeText(i) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                phone: i\n              }));\n            },\n            asterik: true,\n            ref: messInput\n          }), _jsx(FormItem, {\n            label: \"Mess Name\",\n            isRequired: true,\n            value: messDetails.messname,\n            onChangeText: function onChangeText(i) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                messname: i\n              }));\n            },\n            asterik: true,\n            ref: messInput\n          }), _jsx(FormItem, {\n            label: \"Price (/month)\",\n            isRequired: true,\n            value: messDetails.pricing,\n            onChangeText: function onChangeText(i) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                pricing: i\n              }));\n            },\n            asterik: true,\n            ref: messInput\n          }), _jsx(FormItem, {\n            label: \"Mess Address\",\n            isRequired: true,\n            textArea: true,\n            value: messDetails.address,\n            onChangeText: function onChangeText(i) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                address: i\n              }));\n            },\n            asterik: true,\n            ref: messInput\n          }), _jsx(Picker, {\n            items: [{\n              label: \"Dine-in\",\n              value: \"Dine-in\"\n            }, {\n              label: \"Tiffin\",\n              value: \"Tiffin\"\n            }, {\n              label: \"Both\",\n              value: \"Both Dine-in and Tiffin\"\n            }],\n            label: \"Service Type\",\n            selectedValue: messDetails.service,\n            onSelection: function onSelection(i) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                service: i.value\n              }));\n            },\n            isRequired: true,\n            asterik: true\n          }), _jsx(Picker, {\n            items: [{\n              label: \"Pure-veg\",\n              value: \"pure-veg\"\n            }, {\n              label: \"Non-veg\",\n              value: \"non-veg\"\n            }, {\n              label: \"Jain\",\n              value: \"jain\"\n            }],\n            label: \"Food Type\",\n            selectedValue: messDetails.type,\n            onSelection: function onSelection(i) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                type: i.value\n              }));\n            },\n            isRequired: true,\n            asterik: true\n          }), _jsx(Picker, {\n            items: [{\n              label: \"Yes\",\n              value: true\n            }, {\n              label: \"No\",\n              value: false\n            }],\n            label: \"Breakfast included?\",\n            selectedValue: messDetails.breakfast,\n            onSelection: function onSelection(item) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                breakfast: item.value\n              }));\n            },\n            isRequired: true,\n            asterik: true\n          }), _jsx(Picker, {\n            items: [{\n              label: \"Sundays closed\",\n              value: \"closed\"\n            }, {\n              label: \"Sundays open\",\n              value: \"open\"\n            }, {\n              label: \"Only first half\",\n              value: \"first-half\"\n            }],\n            label: \"What about sundays?\",\n            selectedValue: messDetails.aboutSundays,\n            onSelection: function onSelection(item) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                aboutSundays: item.value\n              }));\n            },\n            isRequired: true,\n            asterik: true\n          }), _jsx(Picker, {\n            items: [{\n              label: \"Yes\",\n              value: true\n            }, {\n              label: \"No\",\n              value: false\n            }],\n            label: \"Trial available?\",\n            selectedValue: messDetails.trial,\n            onSelection: function onSelection(item) {\n              return setMessDetails(_objectSpread(_objectSpread({}, messDetails), {}, {\n                trial: item.value\n              }));\n            },\n            isRequired: true,\n            asterik: true\n          })]\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(FormItem, {\n            label: \"firstname\",\n            isRequired: true,\n            value: customerDetails.firstname,\n            onChangeText: function onChangeText(firstname) {\n              return setCustomerDetails(_objectSpread(_objectSpread({}, customerDetails), {}, {\n                firstname: firstname\n              }));\n            },\n            asterik: true,\n            ref: customerInput\n          }), _jsx(FormItem, {\n            label: \"lastname\",\n            isRequired: true,\n            value: customerDetails.lastname,\n            onChangeText: function onChangeText(lastname) {\n              return setCustomerDetails(_objectSpread(_objectSpread({}, customerDetails), {}, {\n                lastname: lastname\n              }));\n            },\n            asterik: true,\n            ref: customerInput\n          }), _jsx(FormItem, {\n            label: \"email\",\n            isRequired: true,\n            value: customerDetails.email,\n            onChangeText: function onChangeText(email) {\n              return setCustomerDetails(_objectSpread(_objectSpread({}, customerDetails), {}, {\n                email: email\n              }));\n            },\n            asterik: true,\n            ref: customerInput\n          }), _jsx(FormItem, {\n            label: \"Contact\",\n            isRequired: true,\n            value: customerDetails.phone,\n            onChangeText: function onChangeText(contact) {\n              return setCustomerDetails(_objectSpread(_objectSpread({}, customerDetails), {}, {\n                phone: contact\n              }));\n            },\n            asterik: true,\n            ref: customerInput\n          })]\n        })]\n      })\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        navigation.navigate(\"Login\");\n      },\n      style: {\n        alignItems: \"center\"\n      },\n      children: _jsx(Text, {\n        children: \"Login?\"\n      })\n    })]\n  });\n}\nexport default RegistrationScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"p-5\": {\n      \"paddingTop\": 20,\n      \"paddingRight\": 20,\n      \"paddingBottom\": 20,\n      \"paddingLeft\": 20\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","Form","FormItem","Picker","baseUrl","axios","Location","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RegistrationScreen","_ref","navigation","_useState","username","password","_useState2","_slicedToArray","credentials","setcredentials","credentialInput","_useState3","_useState4","nextScreen","setNextScreen","_useState5","_useState6","location","setLocation","_useState7","_useState8","errorMsg","setErrorMsg","_useState9","firstname","lastname","email","phone","_useState10","customerDetails","setCustomerDetails","customerInput","addressResponse","_useState11","messname","address","latitude","longitude","service","type","trial","breakfast","aboutSundays","pricing","_useState12","messDetails","setMessDetails","messInput","_useState13","_useState14","number","setNumber","getMyAddress","_ref2","_asyncToGenerator","_res$","_res$2","_res$3","_res$4","_res$5","_res$6","_res$7","res","reverseGeocodeAsync","coords","name","streetNumber","street","district","city","region","postalCode","console","log","apply","arguments","_yield$Location$reque","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","then","loc","catch","err","url","data","_objectSpread","_StyledComponent","style","flex","justifyContent","className","component","View","children","buttonText","onButtonPress","label","isRequired","value","onChangeText","i","asterik","ref","underneathText","post","Alert","alert","text","onPress","navigate","ScrollView","contentContainerStyle","padding","items","selectedValue","onSelection","item","textArea","contact","Pressable","alignItems","Text","_NativeWindStyleSheet","create","styles"],"sources":["/home/vishal/Desktop/SpeMajorFrontend/screens/RegistrationScreen.js"],"sourcesContent":["import { View, Text, Pressable, ScrollView, Alert } from \"react-native\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nimport { Form, FormItem, Picker } from \"react-native-form-component\";\nimport { baseUrl } from \"../assets/URL\";\n\nimport axios from \"axios\";\nimport * as Location from \"expo-location\";\n\nfunction RegistrationScreen({ navigation }) {\n  //for storing credentials\n  const [credentials, setcredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const credentialInput = useRef();\n\n  //for managing pages in registration\n  const [nextScreen, setNextScreen] = useState(1);\n\n  //for storing location coordinates and error\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  //storing customer details\n  const [customerDetails, setCustomerDetails] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const customerInput = useRef();\n\n  //this is used to store the value returned by expo-location api\n  let addressResponse;\n\n  //storing mess details\n  const [messDetails, setMessDetails] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    phone: \"\",\n    messname: \"\",\n    address: addressResponse,\n    latitude: \"\",\n    longitude: \"\",\n    service: \"Both\",\n    type: \"pure-veg\",\n    trial: true,\n    breakfast: true,\n    aboutSundays: \"closed\",\n    pricing: \"\",\n  });\n  const messInput = useRef();\n\n  //this state is used to render customer or mess owner form conditionally\n  const [number, setNumber] = useState(1);\n\n  //function to get current location\n  const getMyAddress = async () => {\n    const res = await Location.reverseGeocodeAsync({\n      longitude: location.coords.longitude,\n      latitude: location.coords.latitude,\n    });\n    //rewriting the address returned by the api\n    const addressResponse = `${res[0]?.name} ${res[0]?.streetNumber} ${res[0]?.street} ${res[0]?.district}, ${res[0]?.city}, ${res[0]?.region} - ${res[0]?.postalCode}`;\n    console.log(\"Address\", addressResponse);\n    //pre-filling the adress field\n    setMessDetails({ address: addressResponse });\n  };\n\n  useEffect(() => {\n    //example of creating a function and calling it\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      await Location.getCurrentPositionAsync({})\n        .then((loc) => {\n          setLocation(loc);\n        })\n        .catch((err) => console.log(err));\n    })();\n  }, []);\n\n  //   let text = 'Waiting..';\n  //   if (errorMsg) {\n  //     text = errorMsg;\n  //   } else if (location) {\n  //     text = JSON.stringify(location);\n  //     getMyAddress();\n  //   }\n\n  let url, data;\n  number === 1\n    ? ((url = `${baseUrl}/register-new-customer`),\n      (data = {\n        ...credentials,\n        ...customerDetails,\n      }))\n    : ((url = `${baseUrl}/register-new-mess`),\n      (data = {\n        ...credentials,\n        ...messDetails,\n      }));\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\" }} className=\"p-5\">\n      {/* Form first page here */}\n      {nextScreen === 1 && (\n        <Form\n          buttonText=\"Next\"\n          onButtonPress={async () => {\n            //api call here -> this api fetches address from coordinates\n            getMyAddress();\n            setNextScreen(2);\n          }}\n        >\n          <FormItem\n            label=\"User Name\"\n            isRequired\n            value={credentials.username}\n            onChangeText={(i) =>\n              setcredentials({ ...credentials, username: i })\n            }\n            asterik\n            ref={credentialInput}\n            underneathText=\"Username should be unique\"\n          />\n          <FormItem\n            label=\"Password\"\n            isRequired\n            value={credentials.password}\n            onChangeText={(i) =>\n              setcredentials({ ...credentials, password: i })\n            }\n            asterik\n            ref={credentialInput}\n          />\n        </Form>\n      )}\n\n      {/* Form second page here */}\n      {nextScreen === 2 && (\n        <Form\n          onButtonPress={async () => {\n            let url, data;\n            if (number === 1) {\n              url = `${baseUrl}/register-new-customer`;\n              data = {\n                ...credentials,\n                ...customerDetails,\n              };\n            } else {\n              url = `${baseUrl}/register-new-mess`;\n              data = {\n                ...credentials,\n                ...messDetails,\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude,\n              };\n            }\n\n            //registration api call\n\n            await axios\n              .post(url, data)\n              .then(\n                //giving alert on status 2xx\n                (res) => {\n                  console.log(res.data);\n                  if (res.data === \"Username already taken!\")\n                    Alert.alert(\"Oh no!\", `${res.data}`, [\n                      { text: \"OK\", onPress: () => setNumber(1) },\n                    ]);\n                  else\n                    Alert.alert(\"Success\", `${res.data}`, [\n                      {\n                        text: \"Continue to Login\",\n                        onPress: () => {\n                          navigation.navigate(\"Login\");\n                        },\n                      },\n                    ]);\n                }\n              )\n              .catch((err) => {\n                console.log(err);\n                Alert.alert(\"Oops!\", `${err}`, [{ text: \"OK\" }]);\n              });\n            // console.log(\"My form data\", data);\n          }}\n        >\n          {/* 1 for customer registration\n                        2 for the mess owner registration\n                    */}\n          <ScrollView contentContainerStyle={{ padding: 5 }}>\n            <Picker\n              items={[\n                { label: \"I want to find mess\", value: 1 },\n                { label: \"I want to register my mess\", value: 2 },\n              ]}\n              label=\"What are you looking for?\"\n              selectedValue={number}\n              onSelection={(item) => setNumber(item.value)}\n            />\n            {number === 2 ? (\n              <>\n                <FormItem\n                  label=\"firstname\"\n                  isRequired\n                  value={messDetails.firstname}\n                  onChangeText={(i) =>\n                    setMessDetails({ ...messDetails, firstname: i })\n                  }\n                  asterik\n                  ref={messInput}\n                />\n                <FormItem\n                  label=\"lastname\"\n                  isRequired\n                  value={messDetails.lastname}\n                  onChangeText={(i) =>\n                    setMessDetails({ ...messDetails, lastname: i })\n                  }\n                  asterik\n                  ref={messInput}\n                />\n                <FormItem\n                  label=\"Contact\"\n                  isRequired\n                  value={messDetails.phone}\n                  onChangeText={(i) =>\n                    setMessDetails({ ...messDetails, phone: i })\n                  }\n                  asterik\n                  ref={messInput}\n                />\n                <FormItem\n                  label=\"Mess Name\"\n                  isRequired\n                  value={messDetails.messname}\n                  onChangeText={(i) =>\n                    setMessDetails({ ...messDetails, messname: i })\n                  }\n                  asterik\n                  ref={messInput}\n                />\n                <FormItem\n                  label=\"Price (/month)\"\n                  isRequired\n                  value={messDetails.pricing}\n                  onChangeText={(i) =>\n                    setMessDetails({ ...messDetails, pricing: i })\n                  }\n                  asterik\n                  ref={messInput}\n                />\n                <FormItem\n                  label=\"Mess Address\"\n                  isRequired\n                  textArea\n                  value={messDetails.address}\n                  onChangeText={(i) =>\n                    setMessDetails({ ...messDetails, address: i })\n                  }\n                  asterik\n                  ref={messInput}\n                />\n                <Picker\n                  items={[\n                    { label: \"Dine-in\", value: \"Dine-in\" },\n                    { label: \"Tiffin\", value: \"Tiffin\" },\n                    { label: \"Both\", value: \"Both Dine-in and Tiffin\" },\n                  ]}\n                  label=\"Service Type\"\n                  selectedValue={messDetails.service}\n                  onSelection={(i) =>\n                    setMessDetails({ ...messDetails, service: i.value })\n                  }\n                  isRequired\n                  asterik\n                />\n                <Picker\n                  items={[\n                    { label: \"Pure-veg\", value: \"pure-veg\" },\n                    { label: \"Non-veg\", value: \"non-veg\" },\n                    { label: \"Jain\", value: \"jain\" },\n                  ]}\n                  label=\"Food Type\"\n                  selectedValue={messDetails.type}\n                  onSelection={(i) =>\n                    setMessDetails({ ...messDetails, type: i.value })\n                  }\n                  isRequired\n                  asterik\n                />\n                <Picker\n                  items={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                  label=\"Breakfast included?\"\n                  selectedValue={messDetails.breakfast}\n                  onSelection={(item) =>\n                    setMessDetails({ ...messDetails, breakfast: item.value })\n                  }\n                  isRequired\n                  asterik\n                />\n                <Picker\n                  items={[\n                    { label: \"Sundays closed\", value: \"closed\" },\n                    { label: \"Sundays open\", value: \"open\" },\n                    { label: \"Only first half\", value: \"first-half\" },\n                  ]}\n                  label=\"What about sundays?\"\n                  selectedValue={messDetails.aboutSundays}\n                  onSelection={(item) =>\n                    setMessDetails({ ...messDetails, aboutSundays: item.value })\n                  }\n                  isRequired\n                  asterik\n                />\n                <Picker\n                  items={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                  label=\"Trial available?\"\n                  selectedValue={messDetails.trial}\n                  onSelection={(item) =>\n                    setMessDetails({ ...messDetails, trial: item.value })\n                  }\n                  isRequired\n                  asterik\n                />\n              </>\n            ) : (\n              <>\n                <FormItem\n                  label=\"firstname\"\n                  isRequired\n                  value={customerDetails.firstname}\n                  onChangeText={(firstname) =>\n                    setCustomerDetails({\n                      ...customerDetails,\n                      firstname: firstname,\n                    })\n                  }\n                  asterik\n                  ref={customerInput}\n                />\n                <FormItem\n                  label=\"lastname\"\n                  isRequired\n                  value={customerDetails.lastname}\n                  onChangeText={(lastname) =>\n                    setCustomerDetails({\n                      ...customerDetails,\n                      lastname: lastname,\n                    })\n                  }\n                  asterik\n                  ref={customerInput}\n                />\n                <FormItem\n                  label=\"email\"\n                  isRequired\n                  value={customerDetails.email}\n                  onChangeText={(email) =>\n                    setCustomerDetails({ ...customerDetails, email: email })\n                  }\n                  asterik\n                  ref={customerInput}\n                />\n                <FormItem\n                  label=\"Contact\"\n                  isRequired\n                  value={customerDetails.phone}\n                  onChangeText={(contact) =>\n                    setCustomerDetails({ ...customerDetails, phone: contact })\n                  }\n                  asterik\n                  ref={customerInput}\n                />\n              </>\n            )}\n          </ScrollView>\n        </Form>\n      )}\n\n      <Pressable\n        onPress={() => {\n          navigation.navigate(\"Login\");\n          // setNextScreen(0);\n        }}\n        style={{ alignItems: \"center\" }}\n      >\n        <Text>Login?</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nexport default RegistrationScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}