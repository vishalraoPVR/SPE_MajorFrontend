{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { FAB, Card, SegmentedButtons, Text, Avatar } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport FAIcon from \"@expo/vector-icons/FontAwesome\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { GlobalContext } from \"../../context/userContext\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../assets/URL\";\nimport { Form, FormItem, Picker } from \"react-native-form-component\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction ProfileScreen() {\n  var _userDetails$menus;\n  var _useContext = useContext(GlobalContext),\n    globalState = _useContext.globalState,\n    setGlobalState = _useContext.setGlobalState;\n  var _useState = useState(\"profile\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    screen = _useState2[0],\n    setScreen = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loggedinUser = _useState4[0],\n    setUser = _useState4[1];\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userDetails = _useState6[0],\n    setUserDetails = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    modalVisible = _useState8[0],\n    setModalVisible = _useState8[1];\n  var _useState9 = useState({\n      rating: 1,\n      comment: \"\"\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    review = _useState10[0],\n    setReview = _useState10[1];\n  var reviewInput = useRef();\n  var openDialer = function () {\n    var _ref = _asyncToGenerator(function* (number) {\n      if (Platform.OS === \"android\") Linking.openURL(\"tel:\" + number);\n    });\n    return function openDialer(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var openMaps = function () {\n    var _ref2 = _asyncToGenerator(function* (mapsUrl) {\n      if (Platform.OS === \"android\") {\n        Linking.openURL(mapsUrl);\n      }\n    });\n    return function openMaps(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      yield axios.get(baseUrl + \"/customer/get-profile/\" + (globalState == null ? void 0 : globalState.username), {\n        headers: {\n          Authorization: \"Bearer \" + (globalState == null ? void 0 : globalState.token)\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        setUserDetails(res.data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    })();\n  }, []);\n  var writeReview = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      axios.post(baseUrl + \"/customer/add-review\", _objectSpread(_objectSpread({}, review), {}, {\n        customer_username: globalState == null ? void 0 : globalState.username,\n        mess_owner_username: userDetails == null ? void 0 : userDetails.ownerUsername\n      }), {\n        headers: {\n          Authorization: \"Bearer \" + (globalState == null ? void 0 : globalState.token)\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        Alert.alert(\"Success!\", \"\" + res.data, [{\n          text: \"OK\"\n        }]);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      setModalVisible(!modalVisible);\n    });\n    return function writeReview() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(_StyledComponent, {\n    className: \"h-full\",\n    component: View,\n    children: [_jsx(SegmentedButtons, {\n      value: screen,\n      onValueChange: setScreen,\n      buttons: [{\n        value: \"profile\",\n        label: \"Profile\"\n      }, {\n        value: \"mess\",\n        label: \"My Mess\"\n      }]\n    }), screen === \"profile\" && _jsxs(_Fragment, {\n      children: [_jsxs(_StyledComponent, {\n        className: \"flex-1 justify-center ml-10\",\n        component: View,\n        children: [_jsxs(_StyledComponent, {\n          className: \"flex-row items-center my-5\",\n          component: View,\n          children: [_jsx(Avatar.Text, {\n            label: globalState == null ? void 0 : globalState.username.substring(0, 2)\n          }), _jsx(_StyledComponent, {\n            variant: \"titleLarge\",\n            className: \"ml-5\",\n            component: Text,\n            children: userDetails == null ? void 0 : userDetails.username\n          })]\n        }), _jsxs(Text, {\n          variant: \"titleMedium\",\n          children: [_jsx(Icon, {\n            name: \"person\"\n          }), \" Full Name - \", userDetails == null ? void 0 : userDetails.firstname, \" \", userDetails == null ? void 0 : userDetails.lastname]\n        }), _jsxs(Text, {\n          variant: \"titleMedium\",\n          children: [_jsx(Icon, {\n            name: \"email\"\n          }), \" Email - \", userDetails == null ? void 0 : userDetails.email]\n        }), _jsxs(Text, {\n          variant: \"titleMedium\",\n          children: [_jsx(Icon, {\n            name: \"phone\"\n          }), \" Contact - \", userDetails == null ? void 0 : userDetails.phone]\n        })]\n      }), _jsx(_StyledComponent, {\n        className: \"items-end mb-2 mr-2\",\n        component: View,\n        children: _jsx(FAB, {\n          icon: \"logout\",\n          label: \"LogOut\",\n          onPress: _asyncToGenerator(function* () {\n            try {\n              yield AsyncStorage.removeItem(\"logged-in-user\");\n              setGlobalState(_objectSpread(_objectSpread({}, globalState), {}, {\n                isLoggedIn: false\n              }));\n            } catch (err) {\n              console.log(err);\n            }\n          })\n        })\n      })]\n    }), screen === \"mess\" && _jsxs(_Fragment, {\n      children: [_jsx(Modal, {\n        animationType: \"fade\",\n        transparent: false,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          setModalVisible(!modalVisible);\n        },\n        children: _jsx(_StyledComponent, {\n          className: \"flex-1 justify-center items-center\",\n          component: View,\n          children: _jsxs(_StyledComponent, {\n            className: \"items-center\",\n            component: View,\n            children: [_jsxs(_StyledComponent, {\n              variant: \"titleMedium\",\n              className: \"mb-5\",\n              component: Text,\n              children: [\"Write a review for \", userDetails == null ? void 0 : userDetails.messname]\n            }), _jsxs(Form, {\n              buttonText: \"Add\",\n              onButtonPress: function onButtonPress() {\n                writeReview();\n              },\n              children: [_jsx(Picker, {\n                items: [{\n                  label: \"Bad\",\n                  value: 1\n                }, {\n                  label: \"Okay-ish...\",\n                  value: 2\n                }, {\n                  label: \"Good\",\n                  value: 3\n                }, {\n                  label: \"Recommended\",\n                  value: 4\n                }, {\n                  label: \"Happy Customer\",\n                  value: 5\n                }],\n                label: \"What are your views about the mess?\",\n                selectedValue: review.rating,\n                onSelection: function onSelection(item) {\n                  return setReview(_objectSpread(_objectSpread({}, review), {}, {\n                    rating: item.value\n                  }));\n                },\n                asterik: true\n              }), _jsx(FormItem, {\n                label: \"Comment\",\n                isRequired: true,\n                value: review.comment,\n                onChangeText: function onChangeText(i) {\n                  return setReview(_objectSpread(_objectSpread({}, review), {}, {\n                    comment: i\n                  }));\n                },\n                asterik: true,\n                textArea: true,\n                ref: reviewInput\n              })]\n            }), _jsx(Pressable, {\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              children: _jsxs(Text, {\n                children: [_jsx(FAIcon, {\n                  name: \"times-circle-o\"\n                }), \"Cancel\"]\n              })\n            })]\n          })\n        })\n      }), _jsxs(_StyledComponent, {\n        className: \"justify-center items-center\",\n        component: View,\n        children: [_jsx(Card, {\n          children: _jsxs(Card.Content, {\n            children: [_jsx(_StyledComponent, {\n              className: \"capitalize\",\n              variant: \"titleLarge\",\n              component: Text,\n              children: userDetails == null ? void 0 : userDetails.messname\n            }), _jsxs(_StyledComponent, {\n              variant: \"titleMedium\",\n              className: \"capitalize mt-2\",\n              component: Text,\n              children: [_jsx(Icon, {\n                name: \"person\"\n              }), \" \", userDetails == null ? void 0 : userDetails.ownerFirstname, \" \", userDetails == null ? void 0 : userDetails.ownerLastname]\n            }), _jsxs(Text, {\n              variant: \"titleMedium\",\n              onPress: function onPress() {\n                openDialer(userDetails == null ? void 0 : userDetails.ownerPhone);\n              },\n              children: [_jsx(Icon, {\n                name: \"phone\"\n              }), \" \", userDetails == null ? void 0 : userDetails.ownerPhone]\n            }), _jsxs(Text, {\n              variant: \"titleMedium\",\n              onPress: function onPress() {\n                openMaps(\"https://www.google.com/maps/search/?api=1&query=\" + encodeURIComponent(userDetails == null ? void 0 : userDetails.address));\n              },\n              children: [_jsx(Icon, {\n                name: \"location-pin\"\n              }), \" \", userDetails == null ? void 0 : userDetails.address]\n            })]\n          })\n        }), _jsx(_StyledComponent, {\n          className: \"m-5 capitalize\",\n          variant: \"titleLarge\",\n          component: Text,\n          children: \"Menu\"\n        })]\n      }), _jsx(ScrollView, {\n        children: (_userDetails$menus = userDetails.menus) == null ? void 0 : _userDetails$menus.map(function (menuItem, i) {\n          return _jsx(_StyledComponent, {\n            className: \"mt-1 mx-2\",\n            component: Card,\n            children: _jsxs(Card.Content, {\n              children: [_jsx(_StyledComponent, {\n                className: \"capitalize\",\n                variant: \"titleMedium\",\n                component: Text,\n                children: menuItem == null ? void 0 : menuItem.day\n              }), _jsxs(_StyledComponent, {\n                variant: \"bodyMedium\",\n                className: \"capitalize mt-2\",\n                component: Text,\n                children: [\"Breakfast: \", menuItem == null ? void 0 : menuItem.breakfast]\n              }), _jsxs(_StyledComponent, {\n                variant: \"bodyMedium\",\n                className: \"capitalize mt-2\",\n                component: Text,\n                children: [\"Lunch: \", menuItem == null ? void 0 : menuItem.lunch]\n              }), _jsxs(_StyledComponent, {\n                variant: \"bodyMedium\",\n                className: \"capitalize mt-2\",\n                component: Text,\n                children: [\"Dinner: \", menuItem == null ? void 0 : menuItem.dinner]\n              })]\n            })\n          }, i);\n        })\n      }), _jsx(_StyledComponent, {\n        className: \"items-end mb-2 mr-2\",\n        component: View,\n        children: _jsx(FAB, {\n          icon: \"pencil\",\n          label: \"Write Review\",\n          onPress: function onPress() {\n            setModalVisible(!modalVisible);\n          }\n        })\n      })]\n    })]\n  });\n}\nexport default ProfileScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"m-5\": {\n      \"marginTop\": 20,\n      \"marginRight\": 20,\n      \"marginBottom\": 20,\n      \"marginLeft\": 20\n    },\n    \"mx-2\": {\n      \"marginLeft\": 8,\n      \"marginRight\": 8\n    },\n    \"my-5\": {\n      \"marginTop\": 20,\n      \"marginBottom\": 20\n    },\n    \"mb-2\": {\n      \"marginBottom\": 8\n    },\n    \"mb-5\": {\n      \"marginBottom\": 20\n    },\n    \"ml-10\": {\n      \"marginLeft\": 40\n    },\n    \"ml-5\": {\n      \"marginLeft\": 20\n    },\n    \"mr-2\": {\n      \"marginRight\": 8\n    },\n    \"mt-1\": {\n      \"marginTop\": 4\n    },\n    \"mt-2\": {\n      \"marginTop\": 8\n    },\n    \"h-full\": {\n      \"height\": \"100%\"\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"items-end\": {\n      \"alignItems\": \"flex-end\"\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"capitalize\": {\n      \"textTransform\": \"capitalize\"\n    }\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","View","ScrollView","Modal","Alert","Pressable","Linking","FAB","Card","SegmentedButtons","Text","Avatar","AsyncStorage","FAIcon","Icon","GlobalContext","axios","baseUrl","Form","FormItem","Picker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProfileScreen","_userDetails$menus","_useContext","globalState","setGlobalState","_useState","_useState2","_slicedToArray","screen","setScreen","_useState3","_useState4","loggedinUser","setUser","_useState5","_useState6","userDetails","setUserDetails","_useState7","_useState8","modalVisible","setModalVisible","_useState9","rating","comment","_useState10","review","setReview","reviewInput","openDialer","_ref","_asyncToGenerator","number","Platform","OS","openURL","_x","apply","arguments","openMaps","_ref2","mapsUrl","_x2","get","username","headers","Authorization","token","then","res","console","log","data","catch","err","writeReview","_ref4","post","_objectSpread","customer_username","mess_owner_username","ownerUsername","alert","text","_StyledComponent","className","component","children","value","onValueChange","buttons","label","substring","variant","name","firstname","lastname","email","phone","icon","onPress","removeItem","isLoggedIn","animationType","transparent","visible","onRequestClose","messname","buttonText","onButtonPress","items","selectedValue","onSelection","item","asterik","isRequired","onChangeText","i","textArea","ref","Content","ownerFirstname","ownerLastname","ownerPhone","encodeURIComponent","address","menus","map","menuItem","day","breakfast","lunch","dinner","_NativeWindStyleSheet","create","styles"],"sources":["/home/vishal/Desktop/SpeMajorFrontend/screens/customer/ProfileScreen.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  ScrollView,\n  Modal,\n  Alert,\n  Pressable,\n  Linking,\n} from \"react-native\";\nimport { FAB, Card, SegmentedButtons, Text, Avatar } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport FAIcon from \"react-native-vector-icons/FontAwesome\";\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\nimport { GlobalContext } from \"../../context/userContext\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../assets/URL\";\nimport { Form, FormItem, Picker } from \"react-native-form-component\";\n\nfunction ProfileScreen() {\n  const { globalState, setGlobalState } = useContext(GlobalContext);\n  const [screen, setScreen] = useState(\"profile\");\n  const [loggedinUser, setUser] = useState(null);\n  const [userDetails, setUserDetails] = useState({});\n\n  //modal\n  const [modalVisible, setModalVisible] = useState(false);\n  const [review, setReview] = useState({\n    rating: 1,\n    comment: \"\",\n  });\n  const reviewInput = useRef();\n\n  const openDialer = async (number) => {\n    if (Platform.OS === \"android\") Linking.openURL(`tel:${number}`);\n  };\n\n  const openMaps = async (mapsUrl) => {\n    if (Platform.OS === \"android\") {\n      Linking.openURL(mapsUrl);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // api call to fetch user profile\n      await axios\n        .get(`${baseUrl}/customer/get-profile/${globalState?.username}`, {\n          headers: {\n            Authorization: `Bearer ${globalState?.token}`,\n          },\n        })\n        .then((res) => {\n          console.log(res.data);\n          setUserDetails(res.data);\n        })\n        .catch((err) => console.log(err));\n    })();\n  }, []);\n\n  //function to write and send review\n  const writeReview = async () => {\n    axios\n      .post(\n        `${baseUrl}/customer/add-review`,\n        {\n          ...review,\n          customer_username: globalState?.username,\n          mess_owner_username: userDetails?.ownerUsername,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${globalState?.token}`,\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res.data);\n        //show alert on success\n        Alert.alert(\"Success!\", `${res.data}`, [{ text: \"OK\" }]);\n      })\n      .catch((err) => console.log(err));\n\n    setModalVisible(!modalVisible);\n  };\n\n  return (\n    <View className=\"h-full\">\n      <SegmentedButtons\n        value={screen}\n        onValueChange={setScreen}\n        buttons={[\n          {\n            value: \"profile\",\n            label: \"Profile\",\n          },\n          {\n            value: \"mess\",\n            label: \"My Mess\",\n          },\n        ]}\n      />\n\n      {screen === \"profile\" && (\n        <>\n          <View className=\"flex-1 justify-center ml-10\">\n            {/* initial two characters are avatar text */}\n            <View className=\"flex-row items-center my-5\">\n              <Avatar.Text label={globalState?.username.substring(0, 2)} />\n              <Text variant=\"titleLarge\" className=\"ml-5\">\n                {userDetails?.username}\n              </Text>\n            </View>\n            <Text variant=\"titleMedium\">\n              <Icon name=\"person\" /> Full Name - {userDetails?.firstname}{\" \"}\n              {userDetails?.lastname}\n            </Text>\n            <Text variant=\"titleMedium\">\n              <Icon name=\"email\" /> Email - {userDetails?.email}\n            </Text>\n            <Text variant=\"titleMedium\">\n              <Icon name=\"phone\" /> Contact - {userDetails?.phone}\n            </Text>\n          </View>\n          <View className=\"items-end mb-2 mr-2\">\n            <FAB\n              icon=\"logout\"\n              label=\"LogOut\"\n              onPress={async () => {\n                try {\n                  await AsyncStorage.removeItem(\"logged-in-user\");\n                  setGlobalState({ ...globalState, isLoggedIn: false });\n                } catch (err) {\n                  console.log(err);\n                }\n              }}\n            />\n          </View>\n        </>\n      )}\n      {screen === \"mess\" && (\n        <>\n          {/* Modal */}\n          <Modal\n            animationType=\"fade\"\n            transparent={false}\n            visible={modalVisible}\n            onRequestClose={() => {\n              setModalVisible(!modalVisible);\n            }}\n          >\n            <View className=\"flex-1 justify-center items-center\">\n              <View className=\"items-center\">\n                <Text variant=\"titleMedium\" className=\"mb-5\">\n                  Write a review for {userDetails?.messname}\n                </Text>\n                <Form\n                  buttonText=\"Add\"\n                  onButtonPress={() => {\n                    writeReview();\n                  }}\n                >\n                  <Picker\n                    items={[\n                      { label: \"Bad\", value: 1 },\n                      { label: \"Okay-ish...\", value: 2 },\n                      { label: \"Good\", value: 3 },\n                      { label: \"Recommended\", value: 4 },\n                      { label: \"Happy Customer\", value: 5 },\n                    ]}\n                    label=\"What are your views about the mess?\"\n                    selectedValue={review.rating}\n                    onSelection={(item) =>\n                      setReview({ ...review, rating: item.value })\n                    }\n                    asterik\n                  />\n                  <FormItem\n                    label=\"Comment\"\n                    isRequired\n                    value={review.comment}\n                    onChangeText={(i) => setReview({ ...review, comment: i })}\n                    asterik\n                    textArea\n                    ref={reviewInput}\n                  />\n                </Form>\n                <Pressable onPress={() => setModalVisible(!modalVisible)}>\n                  <Text>\n                    <FAIcon name=\"times-circle-o\" />\n                    Cancel\n                  </Text>\n                </Pressable>\n              </View>\n            </View>\n          </Modal>\n\n          <View className=\"justify-center items-center\">\n            <Card>\n              <Card.Content>\n                <Text className=\"capitalize\" variant=\"titleLarge\">\n                  {userDetails?.messname}\n                </Text>\n                <Text variant=\"titleMedium\" className=\"capitalize mt-2\">\n                  <Icon name=\"person\" /> {userDetails?.ownerFirstname}{\" \"}\n                  {userDetails?.ownerLastname}\n                </Text>\n                <Text\n                  variant=\"titleMedium\"\n                  onPress={() => {\n                    openDialer(userDetails?.ownerPhone);\n                  }}\n                >\n                  <Icon name=\"phone\" /> {userDetails?.ownerPhone}\n                </Text>\n                <Text\n                  variant=\"titleMedium\"\n                  onPress={() => {\n                    openMaps(\n                      `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(\n                        userDetails?.address\n                      )}`\n                    );\n                  }}\n                >\n                  <Icon name=\"location-pin\" /> {userDetails?.address}\n                </Text>\n              </Card.Content>\n            </Card>\n            <Text className=\"m-5 capitalize\" variant=\"titleLarge\">\n              Menu\n            </Text>\n          </View>\n\n          <ScrollView>\n            {userDetails.menus?.map((menuItem, i) => {\n              return (\n                <Card className=\"mt-1 mx-2\" key={i}>\n                  <Card.Content>\n                    <Text className=\"capitalize\" variant=\"titleMedium\">\n                      {menuItem?.day}\n                    </Text>\n                    <Text variant=\"bodyMedium\" className=\"capitalize mt-2\">\n                      Breakfast: {menuItem?.breakfast}\n                    </Text>\n                    <Text variant=\"bodyMedium\" className=\"capitalize mt-2\">\n                      Lunch: {menuItem?.lunch}\n                    </Text>\n                    <Text variant=\"bodyMedium\" className=\"capitalize mt-2\">\n                      Dinner: {menuItem?.dinner}\n                    </Text>\n                  </Card.Content>\n                </Card>\n              );\n            })}\n          </ScrollView>\n          <View className=\"items-end mb-2 mr-2\">\n            <FAB\n              icon=\"pencil\"\n              label=\"Write Review\"\n              onPress={() => {\n                setModalVisible(!modalVisible);\n              }}\n            />\n          </View>\n        </>\n      )}\n    </View>\n  );\n}\n\nexport default ProfileScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}